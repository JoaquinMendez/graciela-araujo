/* If using a CSS module, e.g., index.module.css */
/* import * as styles from "../styles/index.module.css" in your component */

.introduction {
  margin-top: 2rem;
  display: flex;             /* Enable flex container */
  flex-direction: row;       /* Arrange items in a row (horizontally) */
  align-items: center;       /* Vertically align items in the center of each row */
  justify-content: center;   /* Horizontally center the *columns* as a group */
  padding: 20px;             /* Add some padding around the content */
  gap: 20px;                 /* Add some space between the columns (modern flexbox way) */
}

.introduction > div {
  flex: 1; /* Each direct child div will take up equal available space */
  padding: 10px; /* Add some padding within each column */
}

/* Specific styling for the first column (h1 and p) */
.introduction > div:nth-child(1) {
  text-align: right; /* Align text to the right, towards the painting */
}

.introduction > div:nth-child(1) > h1 {
  margin-bottom: 2rem;
}

.introduction > div:nth-child(1) > p {
  margin: 0.5rem;
}

/* Style for the middle column (containing the image) to ensure the image is centered within it */
.introduction > div:nth-child(2) { /* Targets the second div (the image container) */
  display: flex;
  justify-content: center; /* Center the image horizontally within this column */
  align-items: center;     /* Center the image vertically within this column */
}

/* Specific styling for the third column (the paragraph) */
.introduction > div:nth-child(3) {
  text-align: left; /* Align text to the left, towards the painting */
}

.introduction p {
  max-width: 300px;
  display: inline-block;
}

.main-content {
  display: flex; /* Enable flexbox for centering */
  flex-direction: column;
  justify-content: center; /* Horizontally center content */
  align-items: center; /* Vertically center content (if the div has height) */
  padding-top: 2rem; /* Add some vertical and horizontal padding */
  text-align: center; /* Fallback for older browsers or if flexbox doesn't apply */
  width: 100%; /* Ensure it takes full width to allow centering */
}

.explore-more-container {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.4rem;
  cursor: pointer;
}

.explore-more-container:hover {
  color: #e33916; /* Change to your desired hover color (e.g., the red-orange) */
}

.scroll-arrow {
  width: 1.2rem;
  height: 1.2rem;
  display: flex;
  justify-content: center;
  align-items: center;
  animation: bounce 3s infinite;
  transform: translateY(2px);
}

.scroll-arrow .arrow-svg-icon {
  width: 100%;
  height: 100%;
  transition: fill 0.3s ease;
}

.explore-text {
  transition: color 0.3s ease; /* Add transition back to text */
}

.explore-more-container:hover .explore-text {
  color: #e33916;
}

.explore-more-container:hover .scroll-arrow .arrow-svg-icon {
  fill: #e33916; /* Change SVG fill color on hover */
}

/* Keyframes for the bounce animation (no change to values, but note initial transform) */
@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(2px); /* Matches initial position of .scroll-arrow */
  }
  40% {
    transform: translateY(-8px);
  }
  60% {
    transform: translateY(-3px);
  }
}

.vertical-divider {
  margin-top: 2rem;
  width: 0.1rem;
  height: 3.5rem;
  background-color: #e33916;
}

.horizontal-divider {
  margin-top: 15rem;
  width: 3.5rem;
  height: 0.1rem;
  background-color: #e33916;
}

.header-about {
  width: 75%;
  text-align: center;
}

.about-container {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 3rem;
}

.about-text {
  width: 30%;
  text-align: start;
}

.continue-reading-divider{
  margin-top: 0.75rem;
  width: 3.5rem;
  height: 0.1rem;
  background-color: #A8A8A8;
}